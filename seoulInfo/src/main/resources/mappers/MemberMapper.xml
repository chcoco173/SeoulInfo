<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.MemberDAO">
	
	<!-- 회원가입 : DB입력 -->
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO member ( member_id, member_pw, member_name, member_tel, member_email, member_area )
		VALUES ( #{member_id}, #{member_pw}, #{member_name}, #{member_tel}, #{member_email}, #{member_area} )	
	</insert>

	<!-- 8/2 회원수정 : DB입력 -->	
    <select id="updateMember" parameterType="MemberVO" resultType="MemberVO">
        UPDATE member 
        SET member_id=#{member_id}, member_pw=#{member_pw}, member_name=#{member_name}, member_tel=#{member_tel}, member_email=#{member_email}, member_area=#{member_area} 
        WHERE member_id=#{member_id}
    </select>
	<select id="getMemberById" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_id=#{member_id}
	</select>    
    	
	
	<!-- 로그인 : DB확인 -->
	<select id="loginCheck" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_id=#{member_id}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="idSearch" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_name=#{member_name} AND member_email=#{member_email}
	</select>
	
	<!-- 비밀번호찾기 -->
	<select id="pwSearch" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_name=#{member_name} AND member_email=#{member_email} AND member_id=#{member_id}				
	</select>
			
	
	<!-- 아이디 중복체크 -->
	<select id="idChk" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member
		WHERE member_id=#{member_id}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailChk" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member
		WHERE member_email=#{member_email}
	</select>
		
	
	<!-- 이메일인증 -->
	<select id="findByEmail" parameterType="String" resultType="MemberVO">
		SELECT * FROM member
		WHERE member_email=#{member_email}
	</select>	
    <select id="findMemberByEmail" parameterType="String" resultType="MemberVO">
        SELECT * FROM member WHERE member_email=#{member_email}
    </select>	

	<!-- 임시비밀번호 변경 -->
    <select id="checkEmail" resultType="Integer">
        SELECT COUNT(*) FROM member WHERE member_email = #{member_email}
    </select>

    <update id="updatePassword">
        UPDATE member SET member_pw = #{newPassword} WHERE member_email = #{member_email}
    </update>	



    <!-- 8/1 네이버 로그인 -->
    <!-- 이메일로 사용자 등록 여부 확인 -->
    <select id="checkUserByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM member
        WHERE member_email = #{member_email}
    </select>
    

    <!-- 이메일로 전체 사용자 정보 가져오기 -->	
    <select id="getMemberByEmail" parameterType="String" resultType="MemberVO">
        SELECT *
        FROM member
        WHERE member_email = #{member_email}
    </select>
    		            	

	<!-- 8/6 마이페이지/프로필 사진 등록 -->
	<update id="updateProfile" parameterType="MemberVO">
		UPDATE member 
		SET member_imageOrigin=#{member_imageOrigin}, member_imageName=#{member_imageName}, member_imagePath=#{member_imagePath}
		WHERE member_id=#{member_id}		
	</update>
	
    <!-- 8/7 마이페이지/충전기 즐겨찾기 -->
	<select id="getEvList" parameterType="String" resultType="EVStationVO">	
		SELECT
			 ef.member_id   AS member_id 
			,ef.evc_id		AS evc_id
			,e.evc_area	    AS evc_area
			,e.evc_name	    AS evc_name
			,e.evc_address  AS evc_address
		FROM  evc_fav ef JOIN evc e
		ON 	  ef.evc_id = e.evc_id 
		WHERE ef.member_id=#{member_id}
	</select>
	<delete id="deleteEv" parameterType="MemberVO">
	    DELETE FROM evc_fav
	    WHERE member_id = #{member_id} AND evc_id = #{evc_id}
	</delete>
	
	<!-- 8/7 마이페이지/관심상품 -->
	<select id="getProductList" parameterType="String" resultType="MypageProductVO">	
		SELECT
			 pf.member_id  		  AS  member_id 
			,pf.sale_id			  AS  sale_id
			,ps.sale_cate 		  AS  sale_cate
			,ps.sale_name  		  AS  sale_name
			,ps.sale_price 		  AS  sale_price
			,pi.productimg_alias  AS  productimg_alias
		FROM  favorite_product pf
		JOIN  product_sale     ps 	  ON  pf.sale_id = ps.sale_id
		JOIN  product_image    pi 	  ON  pf.sale_id = pi.sale_id 
		WHERE pf.member_id=#{member_id}
	</select>
	<delete id="deleteProduct" parameterType="MemberVO">
	    DELETE FROM favorite_product
	    WHERE member_id = #{member_id} AND sale_id = #{sale_id}
	</delete>	
	
	<!-- 8/8 마이페이지/1:1문의 등록-->
	<insert id="insertQuestion" parameterType="QuestionVO">
		INSERT INTO question ( question_cate, question_title, question_content, question_date, member_id )
		VALUES ( #{question_cate}, #{question_title}, #{question_content}, now(), #{member_id} )	
	</insert>	
	<select id="getQuestionList" parameterType="String" resultType="QuestionVO">
		SELECT * FROM question
		WHERE member_id=#{member_id}
	</select>
	
	<delete id="deleteQuestion" parameterType="MemberVO">
	    DELETE FROM question
	    WHERE member_id = #{member_id} AND question_no = #{question_no}
	</delete>
			
	<select id="selectQuestion" parameterType="QuestionVO" resultType="QuestionVO">
	    SELECT 
	        q.question_no      AS question_no,
	        q.question_cate    AS question_cate,
	        q.question_title   AS question_title,
	        q.question_content AS question_content,
	        q.question_status  AS question_status,
	        q.question_date    AS question_date,
	        q.member_id        AS member_id,
	        COALESCE(a.answer_content, '처리중입니다.') AS answer_content
	    FROM question q
	    LEFT JOIN answer a ON q.question_no = a.question_no
	    WHERE q.member_id = #{member_id} AND q.question_no = #{question_no}
	</select>

	<select id="findByEmail1" resultType="MemberVO">
		SELECT * FROM member
		WHERE member_email = #{email}
	</select>
		
	
	
	

</mapper>
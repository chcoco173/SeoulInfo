<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.MemberDAO">
	
	<!-- 회원가입 : DB입력 -->
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO member ( member_id, member_pw, member_name, member_tel, member_email, member_area )
		VALUES ( #{member_id}, #{member_pw}, #{member_name}, #{member_tel}, #{member_email}, #{member_area} )	
	</insert>
	
	<!-- 로그인 : DB확인 -->
	<select id="loginCheck" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_id=#{member_id}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="idSearch" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_name=#{member_name} AND member_email=#{member_email}
	</select>
	
	<!-- 비밀번호찾기 -->
	<select id="pwSearch" parameterType="MemberVO">
		SELECT * FROM member
		WHERE member_name=#{member_name} AND member_email=#{member_email} AND member_id=#{member_id}				
	</select>
			
	
	<!-- 아이디 중복체크 -->
	<select id="idChk" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member
		WHERE member_id=#{member_id}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailChk" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member
		WHERE member_email=#{member_email}
	</select>
		
	
	<!-- 이메일인증 -->
	<select id="findByEmail" parameterType="String" resultType="MemberVO">
		SELECT * FROM member
		WHERE member_email=#{member_email}
	</select>	
    <select id="findMemberByEmail" parameterType="String" resultType="MemberVO">
        SELECT * FROM member WHERE member_email=#{member_email}
    </select>	

	<!-- 임시비밀번호 변경 -->
    <select id="checkEmail" resultType="Integer">
        SELECT COUNT(*) FROM member WHERE member_email = #{member_email}
    </select>

    <update id="updatePassword">
        UPDATE member SET member_pw = #{newPassword} WHERE member_email = #{member_email}
    </update>	



    <!-- 8/1 네이버 로그인 -->
    <!-- 이메일로 사용자 등록 여부 확인 -->
    <select id="checkUserByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM member
        WHERE member_email = #{member_email}
    </select>
    
    <!-- 이메일로 사용자 이름 가져오기 -->
<!--     <select id="getUserNameByEmail" parameterType="String" resultType="String">
        SELECT member_name
        FROM member
        WHERE member_email = #{member_email}
    </select> -->
    <!-- 이메일로 전체 사용자 정보 가져오기 -->	
    <select id="getMemberByEmail" parameterType="String" resultType="MemberVO">
        SELECT *
        FROM member
        WHERE member_email = #{member_email}
    </select>	
	



</mapper>